@charset "UTF-8";/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */button,hr,input{overflow:visible}audio,canvas,progress,video{display:inline-block}progress,sub,sup{vertical-align:baseline}html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%} menu,article,aside,details,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects;-webkit-transition:all .4s ease-out 0s;transition:all .4s ease-out 0s}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{}body .content,textarea{overflow:auto}button,select{text-transform:none}[type=submit], [type=reset],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:Test--front-end;src:url(../fonts/Test--front-end_098c06d65defbb6ea10311c32cd9831b.eot);src:url(../fonts/Test--front-end_098c06d65defbb6ea10311c32cd9831b.eot?#iefix) format("embedded-opentype"),url(../fonts/Test--front-end_098c06d65defbb6ea10311c32cd9831b.woff2) format("woff2"),url(../fonts/Test--front-end_098c06d65defbb6ea10311c32cd9831b.woff) format("woff"),url(../fonts/Test--front-end_098c06d65defbb6ea10311c32cd9831b.ttf) format("truetype"),url(../fonts/Test--front-end_098c06d65defbb6ea10311c32cd9831b.svg#Test--front-end) format("svg");font-weight:400;font-style:normal}@media screen and (-webkit-min-device-pixel-ratio:0){@font-face{font-family:Test--front-end;src:url(../fonts/Test--front-end_098c06d65defbb6ea10311c32cd9831b.svg#Test--front-end) format("svg")}}[data-icons8]:before{content:attr(data-icons8)}.icons8-add-user-male:before,.icons8-camera:before,.icons8-checked:before,.icons8-checkmark:before,.icons8-delete-2:before,.icons8-delete:before,.icons8-edit:before,.icons8-expand-arrow:before,.icons8-more:before,.icons8-plus:before,.icons8-search:before,.icons8-todo-list:before,.icons8-user:before,[data-icons8]:before{display:inline-block;font-family:Test--front-end;font-style:normal;font-weight:400;font-variant:normal;line-height:1;text-decoration:inherit;text-rendering:optimizeLegibility;text-transform:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-smoothing:antialiased}body .content .tasks .taskItem .taskDate,body .content .tasks .taskItem .taskLink .taskBtn .taskText,body .content .topPanel ul.dropdown li a,body .sidebar .logOut a,body .sidebar .projects .projectsList .projectItem a .itemMenuNumber,body .sidebar .projects .projectsList .projectItem a p,body .sidebar .userInfo .userImgContainer .userName{font-family:sfuiFont,Helvetica,Arial,sans-serif;letter-spacing:0;font-weight:400}.icons8-add-user-male:before{content:"\f100"}.icons8-camera:before{content:"\f101"}.icons8-checked:before{content:"\f102"}.icons8-checkmark:before{content:"\f103"}.icons8-delete:before{content:"\f104"}.icons8-delete-2:before{content:"\f105"}.icons8-edit:before{content:"\f106"}.icons8-expand-arrow:before{content:"\f107"}.icons8-more:before{content:"\f108"}.icons8-plus:before{content:"\f109"}.icons8-search:before{content:"\f10a"}.icons8-todo-list:before{content:"\f10b"}.icons8-user:before{content:"\f10c"}@font-face{font-family:sfuiFont;src:url(partials/fonts/SF-UI-Text-Semibold.otf);src:local('â˜º'),url(../fonts/SF-UI-Text-Semibold.eot?) format('embedded-opentype'),url(../fonts/SF-UI-Text-Semibold.woff) format('woff'),url(../fonts/SF-UI-Text-Semibold.ttf) format('truetype');font-weight:400;font-style:normal}body{margin:0;padding:0;background-color:#fff;width:100%;font-size:15px;display:table}li,ul{list-style:none}.topAnchor{height:0;margin:0}body .sidebar{position:relative;display:table-cell;width:22.8em;height:100%;background-color:#292c33}body .sidebar .userInfo .userImgContainer{padding:1.3em 0 0 2.67em;margin-bottom:1.7em}body .sidebar .userInfo .userImgContainer .userName{font-size:1em;color:#fff;margin-left:1em;display:inline-block}body .sidebar .userInfo .userImgContainer .userImg{display:inline-block;vertical-align:middle;width:4em}body .sidebar .projects .projectsList{margin-left:2em;padding:0}body .sidebar .projects .projectsList .addNewProject .addProjectLink i,body .sidebar .projects .projectsList .addNewProject .addProjectLink p{font-family:sfuiFont,Helvetica,Arial,sans-serif;font-size:.9em;color:#b3bbcb;letter-spacing:0;font-weight:400;margin:1.1em 0}body .sidebar .projects .projectsList .addNewProject .addProjectLink i{color:#fff}body .sidebar .projects .projectsList .projectItem a{width:17.8em;display:block;text-decoration:none;border-radius:.33em;background-color:#292c33;padding-left:1.06em;position:relative}body .sidebar .projects .projectsList .projectItem a .itemMenuName{margin:.75em 0}body .sidebar .projects .projectsList .projectItem a .itemMenuNumber,body .sidebar .projects .projectsList .projectItem a p{font-size:1em;color:#fff;display:inline-block}body .sidebar .projects .projectsList .projectItem a .itemMenuNumber,body .sidebar .projects .projectsList .projectItem a i{text-align:right;position:absolute;right:1.06em}body .sidebar .projects .projectsList .projectItem .active{background-color:#6b6b99;border-radius:.33em}body .sidebar .projects .projectsList .projectItem a:hover{background-color:#6b6b99}body .sidebar .logOut{bottom:1em;position:absolute;width:18.8em;margin-left:2em;border-radius:.33em;background-color:#292c33}body .content .topPanel ul.dropdown li:hover,body .sidebar .logOut:hover{background-color:#6b6b99}body .sidebar .logOut a{font-size:1em;color:#fff;display:block;width:100%;text-decoration:none;padding:1em 0 1em 1.06em}body .content .topPanel{border-bottom:1px solid #bdbdbd;padding-top:.9em;padding-bottom:.9em}body .content .topPanel nav{display:inline}body .content .topPanel .moreBtn{float:right;font-size:1.5em;margin-right:1em;text-decoration:none;color:#9e9e9e}body .content .topPanel .moreBtn:hover{color:#6b6b99}body .content .topPanel .dropdown-toggle{border-radius:.2em .2em 0 0}body .content .topPanel ul.dropdown{display:none;position:absolute;min-width:12em;padding:0;border-radius:.66em;right:0}body .content .topPanel ul.dropdown li{-webkit-transition:all .4s ease-out 0s;transition:all .4s ease-out 0s;border-radius:.33em;list-style-type:none}body .content .topPanel ul.dropdown li a{font-size:1em;color:#212121;text-decoration:none;text-align:right;padding:.5em 1em;display:block}body .content .topPanel ul.dropdown li:hover a{color:#fff}body .content .topPanel .search{margin-left:.9em;font-size:1.5em;color:#b3bbcb;text-decoration:none}body .content .tasks .taskItem{width:41.4em;margin:0 auto}body .content .tasks .taskItem .taskDate{font-size:1em;color:#b3bbcb;margin:1em 0 .66em .5em}body .content .tasks .taskItem .taskLink{border-radius:.66em;box-shadow:0 1px 30px 0 rgba(0,0,0,.16)}body .content .tasks .taskItem .taskLink .taskBtn{display:block;border-radius:.66em;text-decoration:none}body .content .tasks .taskItem .taskLink .taskBtn .checkbox{display:inline-block}body .content .tasks .taskItem .taskLink .taskBtn .checkbox img{width:1.3em;vertical-align:middle;margin:1.3em 2.1em}body .content .tasks .taskItem .taskLink .taskBtn .taskText{font-size:1em;color:#212121;display:inline-block;margin:0;padding:.85em 0 .85em 1.1em;border-left:1px solid #eaeaea}body .content .tasks .taskItem .taskLink .taskBtn:hover{background-color:rgba(0,0,0,.05)}body .content .tasks .taskItem .taskLink .taskSeparator{width:33.3em;background-color:#eaeaea;margin-top:0;margin-bottom:0;border:none;height:1px}body .content .floating{float:right;margin-right:2em;margin-bottom:2em}body .content .floating .floatingBtn{font-size:1.13em;display:block;width:1em;padding:1em;margin-top:2.5em;background-color:#6b6b99;border-radius:2.26em}body .content .floating .floatingBtn i{color:#fff}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
